plugins {
    id 'java'
    id 'application'
    id 'com.google.protobuf' version '0.9.4'
}

group = 'ie.nci.energy'
version = '0.1.0-SNAPSHOT'

application {
    mainClass = 'energy.GridServer'
}

java {
    toolchain { languageVersion = JavaLanguageVersion.of(17) }
}

repositories { mavenCentral() }

ext {
    grpcVersion = '1.63.0'
    protobufVersion = '3.25.3'
}

dependencies {
    implementation "io.grpc:grpc-netty:${grpcVersion}"
    implementation "io.grpc:grpc-protobuf:${grpcVersion}"
    implementation "io.grpc:grpc-stub:${grpcVersion}"
    implementation 'javax.annotation:javax.annotation-api:1.3.2'
    implementation 'javax.jmdns:jmdns:3.4.1'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.10.2'
}

protobuf {
    protoc { artifact = "com.google.protobuf:protoc:${protobufVersion}" }
    plugins { grpc { artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}" } }
    generateProtoTasks { all().each { t -> t.plugins { grpc {} } } }
}
tasks.register('runSolarServer', JavaExec) {
    mainClass = 'energy.SolarServer'
    classpath = sourceSets.main.runtimeClasspath
}
tasks.register('runBatteryServer', JavaExec) {
    mainClass = 'energy.BatteryServer'
    classpath = sourceSets.main.runtimeClasspath
}
tasks.register('runBatteryClient', JavaExec) {
    mainClass = 'energy.BatteryClient'
    classpath = sourceSets.main.runtimeClasspath
}
tasks.register('runGridServer', JavaExec) {
    mainClass = 'energy.GridServer'
    classpath = sourceSets.main.runtimeClasspath
}
tasks.register('runGridClient', JavaExec) {
    mainClass = 'energy.GridClient'
    classpath = sourceSets.main.runtimeClasspath
}
tasks.register('runDiscover', JavaExec) {
    mainClass = 'energy.DiscoverServices'
    classpath = sourceSets.main.runtimeClasspath
}

test { useJUnitPlatform() }
